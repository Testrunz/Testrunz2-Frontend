import { Modal } from "antd";
import styles from "./createnewassetmodal.module.css";
import Flex from "../../packages/Flex/Flex";
import Button from "../../packages/Button/Button";
import Text from "../../packages/Text/Text";
import SvgClose from "../../icons/SvgClose";
import SelectTag from "../../packages/SelectTag/SelectTag";
import InputText from "../../packages/InputText/InputText";
import SvgUnknown from "../../icons/SvgUnknown";
import { FormikProps } from "formik";
import { formType } from "./AssetsScreen";
import { useSelector } from "react-redux";
import { RootState } from "../../redux/store";
import ErrorMessage from "../../packages/ErrorMessage/ErrorMessage";
import { useMemo, useRef } from "react";

type Props = {
  open: boolean;
  cancelClick: () => void;
  suubmit: () => void;
  formik: FormikProps<formType>;
};

const CreateNewAssetModal = ({ open, suubmit, cancelClick, formik }: Props) => {
  const fileInputRef = useRef<any>(null);
  const handleProfileClick = () => {
    if (fileInputRef && fileInputRef.current) {
      fileInputRef.current.click();
    }
  };

  const { moreInfoList } = useSelector(
    ({ moreInfoUserReducers, moreInfoListReducers }: RootState) => {
      return {
        moreInfoData: moreInfoUserReducers.data,
        moreInfoList: moreInfoListReducers.data,
      };
    }
  );

  const getDepartmentOption: any = useMemo(() => {
    const result = moreInfoList.filter(
      (list) => list.organization === formik.values.organization?.organization
    );
    return result ? result[0] : { department: [], labtype: [] };
  }, [formik.values.organization]);

  return (
    <Modal
      width={900}
      onCancel={cancelClick}
      title={<Text type="title">Add new asset</Text>}
      closeIcon={<SvgClose />}
      centered
      open={open}
      footer={
        <Flex row end center className={styles.footer}>
          <Button
            onClick={cancelClick}
            className={styles.cancelBtn}
            types="tertiary-1"
          >
            Cancel
          </Button>
          <Button onClick={suubmit} className={styles.yesBtn}>
            Add
          </Button>
        </Flex>
      }
    >
      <Flex row between>
        <Flex column className={styles.leftModalContent}>
          <Flex className={styles.alignCenterMargin10}>
            {formik.values.imageUrl?.name ? (
              <img
                height={200}
                width={200}
                src={URL.createObjectURL(formik.values.imageUrl)}
              />
            ) : (
              <SvgUnknown height={200} width={200} />
            )}

            <Flex marginTop={20}>
              <Button onClick={handleProfileClick}>Upload photo</Button>
              <input
                style={{ display: "none" }}
                ref={fileInputRef}
                accept="image/*"
                type="file"
                onChange={(event: any) => {
                  formik.setFieldValue("imageUrl", event.target.files[0]);
                }}
              />
            </Flex>
          </Flex>

          {/* <Flex row className={styles.overAll}>
            <Flex flex={1} className={styles.inputMarginRight20}>
              <InputText
                disabled
                value="IDAS304"
                label="Asset Id (autogenerated)"
              />
            </Flex>
          </Flex> */}

          {/* <Flex>
            <Text size={20} color="tertiary-shade-2" type="subTitle">
              Recently Used
            </Text>
          </Flex>

          <Flex className={styles.overAll}>
            <Text size={12} bold="semiBold">
              no data found
            </Text>
          </Flex> */}
        </Flex>

        <Flex column className={styles.rightModalContent}>
          <Flex className={styles.overAll}>
            <Flex row className={styles.inputFlexMargin}>
              <Flex flex={1} className={styles.inputMarginRight20}>
                <InputText
                  onChange={formik.handleChange("name")}
                  value={formik.values.name}
                  placeholder="Assets name"
                  label="Name"
                />
                <ErrorMessage
                  name="name"
                  touched={formik.touched}
                  errors={formik.errors}
                />
              </Flex>
            </Flex>

            <Flex row className={styles.inputMarginRight20}>
              <Flex flex={1} className={styles.inputMarginRight20}>
                <InputText
                  onChange={formik.handleChange("purchasedate")}
                  value={formik.values.purchasedate}
                  label="Purchase Date"
                  keyboardType="date"
                />
                <ErrorMessage
                  name="purchasedate"
                  touched={formik.touched}
                  errors={formik.errors}
                />
              </Flex>
              <Flex flex={1}>
                <InputText
                  onChange={formik.handleChange("guarantywaranty")}
                  value={formik.values.guarantywaranty}
                  label="Guaranty/warranty/expiry date"
                  keyboardType="date"
                />
                <ErrorMessage
                  name="guarantywaranty"
                  touched={formik.touched}
                  errors={formik.errors}
                />
              </Flex>
            </Flex>
            <Flex flex={1} className={styles.inputMarginRight20}>
              <SelectTag
                required
                value={formik.values.organization}
                onChange={(event) => {
                  formik.setFieldValue("department", "");
                  formik.setFieldValue("lab", "");
                  formik.setFieldValue("organization", {
                    organization: event.organization,
                    _id: event._id,
                  });
                }}
                options={moreInfoList}
                placeholder="Select"
                label="Organization"
                getOptionLabel={(option) => option.organization}
                getOptionValue={(option) => option._id}
              />
              <ErrorMessage
                name="organization"
                touched={formik.touched}
                errors={formik.errors}
              />
            </Flex>
            <Flex flex={1} className={styles.inputMarginRight20}>
              <SelectTag
                isMulti
                required
                value={formik.values.department}
                onChange={(event) => {
                  formik.setFieldValue("department", event);
                }}
                options={
                  getDepartmentOption?.department
                    ? getDepartmentOption?.department
                    : []
                }
                placeholder="Select"
                label="Department"
              />
              <ErrorMessage
                name="department"
                touched={formik.touched}
                errors={formik.errors}
              />
            </Flex>

            <Flex flex={1} className={styles.inputMarginRight20}>
              <SelectTag
                required
                isMulti
                value={formik.values.lab}
                onChange={(event) => {
                  formik.setFieldValue("lab", event);
                }}
                options={
                  getDepartmentOption?.labtype
                    ? getDepartmentOption?.labtype
                    : []
                }
                placeholder="Select"
                label="Lab Types"
              />
              <ErrorMessage
                name="lab"
                touched={formik.touched}
                errors={formik.errors}
              />
            </Flex>

            <Flex row className={styles.inputMarginRight20}>
              <Flex flex={1} className={styles.inputMarginRight20}>
                <SelectTag
                  value={formik.values.status}
                  onChange={(event) => {
                    formik.setFieldValue("status", event);
                  }}
                  placeholder="Select Status"
                  options={[
                    { value: "1", label: "Active" },
                    { value: "0", label: "InActive" },
                  ]}
                  label="status"
                />
                <ErrorMessage
                  name="status"
                  touched={formik.touched}
                  errors={formik.errors}
                />
              </Flex>
              <Flex flex={1}>
                <SelectTag
                  value={formik.values.availability}
                  onChange={(event) => {
                    formik.setFieldValue("availability", event);
                  }}
                  placeholder="Select Availability"
                  options={[
                    { value: "1", label: "Available" },
                    { value: "0", label: "UnAvailable" },
                  ]}
                  label="Availability"
                />
                <ErrorMessage
                  name="availability"
                  touched={formik.touched}
                  errors={formik.errors}
                />
              </Flex>
            </Flex>
          </Flex>
        </Flex>
      </Flex>
    </Modal>
  );
};

export default CreateNewAssetModal;
